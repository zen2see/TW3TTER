/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MetaTransactionsFacet,
  MetaTransactionsFacetInterface,
} from "../MetaTransactionsFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610761806100206000396000f3fe6080604052600436106100295760003560e01c80630c53c51c1461002e5780632d0335ab14610057575b600080fd5b61004161003c3660046104ec565b61009b565b60405161004e919061062e565b60405180910390f35b34801561006357600080fd5b5061008d610072366004610648565b6001600160a01b031660009081526015602052604090205490565b60405190815260200161004e565b606060006100a886610304565b90506000356001600160e01b031990811690821614156101355760405162461bcd60e51b815260206004820152603d60248201527f66756e6374696f6e5369676e61747572652063616e206e6f74206265206f662060448201527f657865637574654d6574615472616e73616374696f6e206d6574686f6400000060648201526084015b60405180910390fd5b6001600160a01b038716600081815260156020908152604091829020548251606081018452818152918201939093529081018890526101778982898989610320565b6101cd5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b606482015260840161012c565b6101d8826001610663565b6001600160a01b038a16600090815260156020908152604080832093909355915190918291309161020d918d918f9101610689565b60408051601f1981840301815290829052610227916106c0565b6000604051808303816000865af19150503d8060008114610264576040519150601f19603f3d011682016040523d82523d6000602084013e610269565b606091505b5091509150816102bb5760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c00000000604482015260640161012c565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b8b338c6040516102ee939291906106dc565b60405180910390a19a9950505050505050505050565b600081516000141561031857506000919050565b506020015190565b6000806001610336610331886103fc565b610479565b6040805160008152602081018083529290925260ff861690820152606081018790526080810186905260a0016020604051602081039080840390855afa158015610384573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166103db5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015260640161012c565b866001600160a01b0316816001600160a01b03161491505095945050505050565b6000604051806080016040528060438152602001610712604391398051602091820120835184830151604080870151805190860120905161045c950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b600061048460215490565b60405161190160f01b602082015260228101919091526042810183905260620161045c565b80356001600160a01b03811681146104c057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b803560ff811681146104c057600080fd5b600080600080600060a0868803121561050457600080fd5b61050d866104a9565b9450602086013567ffffffffffffffff8082111561052a57600080fd5b818801915088601f83011261053e57600080fd5b813581811115610550576105506104c5565b604051601f8201601f19908116603f01168101908382118183101715610578576105786104c5565b816040528281528b602084870101111561059157600080fd5b82602086016020830137600060208483010152809850505050505060408601359250606086013591506105c6608087016104db565b90509295509295909350565b60005b838110156105ed5781810151838201526020016105d5565b838111156105fc576000848401525b50505050565b6000815180845261061a8160208601602086016105d2565b601f01601f19169290920160200192915050565b6020815260006106416020830184610602565b9392505050565b60006020828403121561065a57600080fd5b610641826104a9565b6000821982111561068457634e487b7160e01b600052601160045260246000fd5b500190565b6000835161069b8184602088016105d2565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600082516106d28184602087016105d2565b9190910192915050565b6001600160a01b0384811682528316602082015260606040820181905260009061070890830184610602565b9594505050505056fe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a164736f6c634300080b000a";

export class MetaTransactionsFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetaTransactionsFacet> {
    return super.deploy(overrides || {}) as Promise<MetaTransactionsFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MetaTransactionsFacet {
    return super.attach(address) as MetaTransactionsFacet;
  }
  connect(signer: Signer): MetaTransactionsFacet__factory {
    return super.connect(signer) as MetaTransactionsFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetaTransactionsFacetInterface {
    return new utils.Interface(_abi) as MetaTransactionsFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetaTransactionsFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MetaTransactionsFacet;
  }
}
